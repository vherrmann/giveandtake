/* tslint:disable */
/* eslint-disable */
/**
 * GiveAndTake API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const FeedType = {
    MainFeed: 'MainFeed'
} as const;
export type FeedType = typeof FeedType[keyof typeof FeedType];


export function instanceOfFeedType(value: any): boolean {
    for (const key in FeedType) {
        if (Object.prototype.hasOwnProperty.call(FeedType, key)) {
            if ((FeedType as Record<string, FeedType>)[key] === value) {
                return true;
            }
        }
    }
    return false;
}

export function FeedTypeFromJSON(json: any): FeedType {
    return FeedTypeFromJSONTyped(json, false);
}

export function FeedTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedType {
    return json as FeedType;
}

export function FeedTypeToJSON(value?: FeedType | null): any {
    return value as any;
}

