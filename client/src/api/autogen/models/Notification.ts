/* tslint:disable */
/* eslint-disable */
/**
 * GiveAndTake API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotifContent } from './NotifContent';
import {
    NotifContentFromJSON,
    NotifContentFromJSONTyped,
    NotifContentToJSON,
} from './NotifContent';
import type { NotifPrio } from './NotifPrio';
import {
    NotifPrioFromJSON,
    NotifPrioFromJSONTyped,
    NotifPrioToJSON,
} from './NotifPrio';

/**
 * 
 * @export
 * @interface Notification
 */
export interface Notification {
    /**
     * 
     * @type {NotifContent}
     * @memberof Notification
     */
    content: NotifContent;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    createdAt: string;
    /**
     * 
     * @type {NotifPrio}
     * @memberof Notification
     */
    prio: NotifPrio;
    /**
     * 
     * @type {boolean}
     * @memberof Notification
     */
    read: boolean;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    user: string;
}

/**
 * Check if a given object implements the Notification interface.
 */
export function instanceOfNotification(value: object): value is Notification {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('prio' in value) || value['prio'] === undefined) return false;
    if (!('read' in value) || value['read'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function NotificationFromJSON(json: any): Notification {
    return NotificationFromJSONTyped(json, false);
}

export function NotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notification {
    if (json == null) {
        return json;
    }
    return {
        
        'content': NotifContentFromJSON(json['content']),
        'createdAt': json['createdAt'],
        'prio': NotifPrioFromJSON(json['prio']),
        'read': json['read'],
        'title': json['title'],
        'user': json['user'],
    };
}

export function NotificationToJSON(value?: Notification | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'content': NotifContentToJSON(value['content']),
        'createdAt': value['createdAt'],
        'prio': NotifPrioToJSON(value['prio']),
        'read': value['read'],
        'title': value['title'],
        'user': value['user'],
    };
}

